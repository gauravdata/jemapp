<?php

/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     default_default
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */


/**
 * Getting table prefix
 * Of database
 */
$email = '';
if (Mage::isInstalled() && Mage::getSingleton('customer/session')->isLoggedIn()) {
    $this->_data['email'] = $this->__($this->htmlEscape(Mage::getSingleton('customer/session')->getCustomer()->getEmail()));
    $email = $this->_data['email'];
}


/* $_SERVER['MAGE_RUN_CODE'] = 'domain1_com';
  $_SERVER['MAGE_RUN_TYPE'] = 'website';
 */

if (!isset($_SERVER['MAGE_RUN_CODE']) && !isset($_SERVER['MAGE_RUN_TYPE'])) {
    $kiyoh_eventval = Mage::getStoreConfig('customconfig/review_group/custom_event');
    $kiyoh_status = Mage::getStoreConfig('customconfig/review_group/custom_enable');
} else {

}


$kiyoh_connector = Mage::getStoreConfig('customconfig/review_group/custom_connector');
$kiyoh_action = Mage::getStoreConfig('customconfig/review_group/custom_action');
$kiyoh_user = Mage::getStoreConfig('customconfig/review_group/custom_user');
$kiyoh_delay = Mage::getStoreConfig('customconfig/review_group/custom_delay');
$kiyoh_eventval = Mage::getStoreConfig('customconfig/review_group/custom_event');
$kiyoh_status = Mage::getStoreConfig('customconfig/review_group/custom_enable');

/**
 * Block To Find kiyoh setting for present store
 */
if ($kiyoh_eventval == 'Purchase' && $kiyoh_status == '1') {

////call url
    // create a new cURL resource
// Create a curl handle

    /**
     * Find Guest Email address
     */
    if ($email == '') {
        //$_customerId = Mage::getSingleton('customer/session')->getCustomerId();
        //$customer = Mage::getSingleton('customer/session')->getCustomer();
        $lastOrderId = Mage::getSingleton('checkout/session')->getLastOrderId();
        $order = Mage::getSingleton('sales/order');
        $order->load($lastOrderId);
        $_totalData = $order->getData();
        //$_details = $customer->getData();
        //$orderId = $_totalData['increment_id'];
        $email = $_totalData['customer_email'];   //Retrieves guest e-mail
// $name = $order->getBillingAddress()->getName();    //Retrieves guest name
    }

    $kiyoh_server = Mage::getStoreConfig('customconfig/review_group/custom_server');

    $url = 'https://www.'.$kiyoh_server.'/set.php?user='.$kiyoh_user.'&connector='.$kiyoh_connector.'&action='.$kiyoh_action.'&targetMail='.$email.'&delay='.$kiyoh_delay;
//echo '<div style="display:none">'.$url.'</div>';
    // create a new cURL resource
    $curl = curl_init();

    // set URL and other appropriate options
    curl_setopt($curl, CURLOPT_URL, $url);
    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($curl, CURLOPT_HEADER, false);

    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 4);
    curl_setopt($curl, CURLOPT_TIMEOUT, 4);


    // grab URL and pass it to the browser

    $response = curl_exec($curl);
    if (curl_errno($curl)) {
        Mage::log(curl_error($curl).'---Url---'.$url, null, 'kiyoh.log');
    }
    if(Mage::getStoreConfig('customconfig/review_group/debug_enable')){
        Mage::log($response.'---Url---'.$url, null, 'kiyoh.log');
    }
// Close handle
    curl_close($curl);
////call url
}


