<?php

?>

<div class="content-header">
	<h3 class="icon-head head-products"><?php echo $this->getHeader() ?></h3>
	<p class="content-buttons form-buttons"><?php echo $this->getBackButtonHtml() ?>
		<?php echo $this->getCancelButtonHtml() ?>
		<?php if($this->getProductId()): ?>
			<?php echo $this->getDeleteButtonHtml() ?>
			<?php if($this->getProductSetId() && $this->getIsConfigured()): ?>
				<?php echo $this->getDuplicateButtonHtml() ?>
			<?php endif; ?>
		<?php endif; ?>
		<?php if($this->getProductSetId() && $this->getIsConfigured()): ?>
			<?php echo $this->getSaveButtonHtml() ?>
			<?php echo $this->getSaveAndEditButtonHtml() ?>
		<?php endif; ?>
		<?php echo $this->getTranslateButtonHtml() ?>
	</p>
</div>
<form action="<?php echo $this->getSaveUrl() ?>" method="post" id="product_edit_form" enctype="multipart/form-data">
	<?php echo $this->getBlockHtml('formkey')?>
	<div style="display:none"></div>
</form>
<?php

$block = $this->getLayout()->getBlock('store_switcher');
if($block){
	$storeId = $block->getStoreId();
	$language = Mage::helper('translator')->getLanguage($storeId);               
}

?>
<script type="text/javascript">
	//<![CDATA[
	
	function translateproduct()
	{
		var parameters = {product_id : '<?php  echo  $this->getProductId(); ?>',
		store_id : '<?php echo $storeId; ?>',  
		lang_to : '<?php echo $language; ?>',
		product_edit_form : $('product_edit_form').serialize()
	}
	new Ajax.Request('<?php  echo $this->getUrl('adminhtml/translator/ProductTranslate') ?>', {
		method:     'post',
		asynchronous: false,
		onSuccess: function(transport){
			if (transport.responseText )
			{
				location.reload();
			}
		},
		parameters : parameters
	});
}
var productTemplateSyntax = /(^|.|\r|\n)({{(\w+)}})/;
var productForm = new varienForm('product_edit_form', '<?php echo $this->getValidationUrl() ?>');
productForm._processValidationResult = function(transport) {
	var response = transport.responseText.evalJSON();
	if (response.error){
		if (response.attribute && $(response.attribute)) {
			$(response.attribute).setHasError(true, productForm);
			Validation.ajaxError($(response.attribute), response.message);
			if (!Prototype.Browser.IE){
				$(response.attribute).focus();
			}
		}
		else if ($('messages')) {
			$('messages').innerHTML = '<ul class="messages"><li class="error-msg"><ul><li>' + response.message + '</li></ul></li></ul>';
		}
	}
	else{
		productForm._submit();
	}
};
function saveAndContinueEdit(urlTemplate) {
	var template = new Template(urlTemplate, productTemplateSyntax);
	var url = template.evaluate({tab_id:product_info_tabsJsTabs.activeTab.id});
	productForm.submit(url);
}
function setSettings(urlTemplate, setElement, typeElement) {
	var template = new Template(urlTemplate, productTemplateSyntax);
	setLocation(template.evaluate({attribute_set:$F(setElement),type:$F(typeElement)}));
}

function setSuperSettings(urlTemplate, attributesClass, validateField) {
	var attributesFields = $$('.' + attributesClass);
	var attributes = Form.serializeElements(attributesFields, true).attribute;
	if(typeof attributes == 'string') {
		attributes = [attributes];
	}

	if(!attributes) {
		$(validateField).value = 'no-attributes';
	} else {
		$(validateField).value = 'has-attributes';
	}

	if (productForm.validator.validate()) {
		var template = new Template(urlTemplate, productTemplateSyntax);
		var url = template.evaluate({
			attributes: encode_base64(attributes.join(',')).replace(new RegExp('/','g'),'%2F').replace(new RegExp('=','g'),'%3D')
		});
		setLocation(url);
	}
}

function checkMaxLength(Object, MaxLen)
{
	if (Object.value.length > MaxLen-1) {
		Object.value = Object.value.substr(0, MaxLen);
	}
	return 1;
}

Event.observe(window, 'load', function() {
	var objName = '<?php echo $this->getSelectedTabId() ?>';
	if (objName) {
		obj = $(objName);
			//IE fix (bubbling event model)
			product_info_tabsJsTabs.setSkipDisplayFirstTab();
			product_info_tabsJsTabs.showTabContent(obj);
		}
		Product.AttributesBridge.setTabsObject(product_info_tabsJsTabs);
	});

Validation.addAllThese([
	['validate-super-product-attributes', '<?php echo Mage::helper('catalog')->__('Please select one or more attributes.') ?>', function(validation) {
		return (validation != "no-attributes");
	}]]);
	//]]>
</script>
<?php
if(Mage::helper('translator')->isEnable()):
	?>
<div class="overlay_magento" id="admin-popup-overlay" style="display: none; position: fixed; top: 0px; left: 0px; z-index: 1001; width: 100%; height: 100%;"></div>

<div class="overlay_magento" id="error-overlay" style="display: none; position: absolute; top: 0px; left: 0px; z-index: 1001; width: 100%; height: 1099px;"></div>
<div id="popup-error" class="magento_content"
style="position: absolute; display: none; width: 500px; z-index: 1011; top: 40%; left: 40%; height: 150px">
<div class="magento_close" id="widget_window_close"
onclick="$('popup-error').style.display='none'; $('error-overlay').style.display = 'none' "></div>
<div class="top table_window" style="height: 30px; padding-left: 10px;">
	<div class="magento_title"><?php echo $this->__('Error:'); ?></div>
</div>
<div id="error-popup-text" style="height: 50px; padding: 10px; ">
</div>
</div>

<script type="text/javascript">
		//<![CDATA[
		Translator.add('Biztech Translator:', '<?php echo $this->__('Biztech Translator:'); ?>');
		Translator.add('Apply Translate', '<?php echo $this->__('Apply Translate'); ?>');
		Translator.add('Translate to:', '<?php echo $this->__('Translate to:'); ?>');
		Translator.add('Unknown Error!:', '<?php echo $this->__('Unknown Error!'); ?>');
		Translator.add('TRANSLATE TO ', '<?php echo $this->__('TRANSLATE TO '); ?>');
		Translator.add('Select Language for this store in System->Config->Translator', '<?php echo $this->__('Select Language for this store in System->Config->Translator'); ?>');

		BiztechTranslatorConfig = '<?php echo $this->getBiztechTranslatorConfiguration(); ?>';

		Event.observe(window, 'load', function() {
			translator = new BiztechTranslatorForm('product_edit_form', BiztechTranslatorConfig);
		});
		//]]>
	</script>
	<?php
	endif;
	?>